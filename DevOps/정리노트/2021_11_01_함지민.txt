https://github.com/purum01/ 강사님 깃허브

오정임 강사님 웹메일
purum01@naver.com

pw : 5240
 
기본쉘 = python
ipython 쉘 = ipython
쥬피터 노트북 = jupyter notebook
////////////////////////////////////

팁

insert insert cell above 
그이후 code말구 markdown 선택하면 파이썬 명령으로 인식x
문자로 인식함


shift+enter = 단축키

코드 안먹힐 때 : kernal - restart
개발환경 스킵과정

비쥬얼 스튜디오 스킵

python --version < 버전확인 명령어
python < 실행
exit() < 쉘 스크립트 나가기
ipython < ln 표시되는 느김(자바랑은 다른듯)

cd c:\test 경로설정 후 
jupyter notebook 치면 localhost 기반으로 돌아감

python3 클릭

dir(__builtin__) < ?? 언제썻드라
------------------------------------------------------------------------------------------------------
파이썬 데이터타입
숫자 - int 23
float - 실수형 3.14
논리 - bool true, false
문자열 - str 'ok', "ok"

여러개의 데이터 값 = iterable = collection

리스트  list [10, 20, 30]      list() 
튜플 tuple(10, 20, 30)        tuple()
문자열 - str 'ok', "ok"        str()                               시퀀스 데이터 타입

list는 원본 변경 가능 ex ] a = (10, 20, 30, 40) = > (50, 20, 30, 40)
tuple, str은 원본 변경 불가
=====================================================
셋 set{10, 20, 30}                                  set()
딕셔너리 dict {키:값} {1:10, 2:20, 3:30}        dict()
range


함수
입력값 : 인수, 인자, argument
결과값 : return값

---------------------------------------------------------------

사용자 정의 함수

산술연산자
+ - * / // % **
비교연산자 : 결과값이 true / false임
> < >= <= == !=

논리 연산자 : 여러개의 조건을 연결함
and, or, 

and : 모든 결과가 참(true) 이여야 하는 경우
or : 최소 하나라도 참이여야 하는경우
not : true -> false
       false -> true

---------------------------------------------------------------

range(stop, start , step)
= > range 객체
연속된 정수값을 가지는 iterable 객체

ex ] 1 ~ 6까지의 자연수
range(1, 6, 1 << 마지막은 증가되는값)
range(10, 100, 10) = 10, 20, 30 ... 80, 90)

---------------------------------------------------------------
시퀀스 데이터 타입
= 순서가 유지되는 데이터 타입

str, list, tuple
index : 위치 정보, 0부터 시작됨

값 in 시퀀스객체 = 참/거짓 구분

값 not in 시퀀스객체
/////////////////////////////////////////////////////////////////////
슬라이스 : sequence data의 일부를 추출

a = [10,20,30,40,50] 일 때, 
a[0] => 값1개 추출

a[start_index:end_index:step]
ex ] a[0:4:1] = 0 1 2 3 
ex2 ] a[0:4:2] = 0 2  

슬라이스 문법 = 콜론(:)이 나오면 슬라이스 문법이다.
